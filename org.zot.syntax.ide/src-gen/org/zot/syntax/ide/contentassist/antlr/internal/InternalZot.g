/*
 * generated by Xtext 2.10.0
 */
grammar InternalZot;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.zot.syntax.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.zot.syntax.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.zot.syntax.services.ZotGrammarAccess;

}
@parser::members {
	private ZotGrammarAccess grammarAccess;

	public void setGrammarAccess(ZotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTempDep
entryRuleTempDep
:
{ before(grammarAccess.getTempDepRule()); }
	 ruleTempDep
{ after(grammarAccess.getTempDepRule()); } 
	 EOF 
;

// Rule TempDep
ruleTempDep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTempDepAccess().getAlternatives()); }
		(rule__TempDep__Alternatives)
		{ after(grammarAccess.getTempDepAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormula
entryRuleFormula
:
{ before(grammarAccess.getFormulaRule()); }
	 ruleFormula
{ after(grammarAccess.getFormulaRule()); } 
	 EOF 
;

// Rule Formula
ruleFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormulaAccess().getGroup()); }
		(rule__Formula__Group__0)
		{ after(grammarAccess.getFormulaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProbF
entryRuleProbF
:
{ before(grammarAccess.getProbFRule()); }
	 ruleProbF
{ after(grammarAccess.getProbFRule()); } 
	 EOF 
;

// Rule ProbF
ruleProbF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProbFAccess().getGroup()); }
		(rule__ProbF__Group__0)
		{ after(grammarAccess.getProbFAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTempF
entryRuleTempF
:
{ before(grammarAccess.getTempFRule()); }
	 ruleTempF
{ after(grammarAccess.getTempFRule()); } 
	 EOF 
;

// Rule TempF
ruleTempF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTempFAccess().getAlternatives()); }
		(rule__TempF__Alternatives)
		{ after(grammarAccess.getTempFAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAP
entryRuleAP
:
{ before(grammarAccess.getAPRule()); }
	 ruleAP
{ after(grammarAccess.getAPRule()); } 
	 EOF 
;

// Rule AP
ruleAP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAPAccess().getGroup()); }
		(rule__AP__Group__0)
		{ after(grammarAccess.getAPAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getGroup_0()); }
		(rule__TempDep__Group_0__0)
		{ after(grammarAccess.getTempDepAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTempDepAccess().getGroup_1()); }
		(rule__TempDep__Group_1__0)
		{ after(grammarAccess.getTempDepAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTempDepAccess().getGroup_2()); }
		(rule__TempDep__Group_2__0)
		{ after(grammarAccess.getTempDepAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTempDepAccess().getGroup_3()); }
		(rule__TempDep__Group_3__0)
		{ after(grammarAccess.getTempDepAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormulaAccess().getProbFAssignment_1_0()); }
		(rule__Formula__ProbFAssignment_1_0)
		{ after(grammarAccess.getFormulaAccess().getProbFAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormulaAccess().getTempAssignment_1_1()); }
		(rule__Formula__TempAssignment_1_1)
		{ after(grammarAccess.getFormulaAccess().getTempAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getAlternatives_1_0()); }
		(rule__ProbF__Alternatives_1_0)
		{ after(grammarAccess.getProbFAccess().getAlternatives_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProbFAccess().getReal1Assignment_1_1()); }
		(rule__ProbF__Real1Assignment_1_1)
		{ after(grammarAccess.getProbFAccess().getReal1Assignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getGroup_1_0_0()); }
		(rule__ProbF__Group_1_0_0__0)
		{ after(grammarAccess.getProbFAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProbFAccess().getGroup_1_0_1()); }
		(rule__ProbF__Group_1_0_1__0)
		{ after(grammarAccess.getProbFAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getAlternatives_2_0()); }
		(rule__ProbF__Alternatives_2_0)
		{ after(grammarAccess.getProbFAccess().getAlternatives_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getProbFAccess().getReal2Assignment_2_1()); }
		(rule__ProbF__Real2Assignment_2_1)
		{ after(grammarAccess.getProbFAccess().getReal2Assignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getGroup_2_0_0()); }
		(rule__ProbF__Group_2_0_0__0)
		{ after(grammarAccess.getProbFAccess().getGroup_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProbFAccess().getGroup_2_0_1()); }
		(rule__ProbF__Group_2_0_1__0)
		{ after(grammarAccess.getProbFAccess().getGroup_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getApAssignment_0()); }
		(rule__TempF__ApAssignment_0)
		{ after(grammarAccess.getTempFAccess().getApAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTempFAccess().getGroup_1()); }
		(rule__TempF__Group_1__0)
		{ after(grammarAccess.getTempFAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTempFAccess().getGroup_2()); }
		(rule__TempF__Group_2__0)
		{ after(grammarAccess.getTempFAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTempFAccess().getGroup_3()); }
		(rule__TempF__Group_3__0)
		{ after(grammarAccess.getTempFAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTempFAccess().getGroup_4()); }
		(rule__TempF__Group_4__0)
		{ after(grammarAccess.getTempFAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getTempFAccess().getGroup_5()); }
		(rule__TempF__Group_5__0)
		{ after(grammarAccess.getTempFAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getTempFAccess().getGroup_6()); }
		(rule__TempF__Group_6__0)
		{ after(grammarAccess.getTempFAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPAccess().getPKeyword_1_0()); }
		'P'
		{ after(grammarAccess.getAPAccess().getPKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAPAccess().getPKeyword_1_1()); }
		'p'
		{ after(grammarAccess.getAPAccess().getPKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDEPENDENCIESKeyword_0()); }
	('DEPENDENCIES:')?
	{ after(grammarAccess.getModelAccess().getDEPENDENCIESKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTempDepAssignment_1()); }
	(rule__Model__TempDepAssignment_1)?
	{ after(grammarAccess.getModelAccess().getTempDepAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFORMULAKeyword_2()); }
	'FORMULA:'
	{ after(grammarAccess.getModelAccess().getFORMULAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFmaAssignment_3()); }
	(rule__Model__FmaAssignment_3)
	{ after(grammarAccess.getModelAccess().getFmaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempDep__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_0__0__Impl
	rule__TempDep__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_0__1__Impl
	rule__TempDep__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getDepKeyword_0_1()); }
	'dep'
	{ after(grammarAccess.getTempDepAccess().getDepKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_0__2__Impl
	rule__TempDep__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getFdAssignment_0_2()); }
	(rule__TempDep__FdAssignment_0_2)
	{ after(grammarAccess.getTempDepAccess().getFdAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_0__3__Impl
	rule__TempDep__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTempDepAccess().getFpsAssignment_0_3()); }
		(rule__TempDep__FpsAssignment_0_3)
		{ after(grammarAccess.getTempDepAccess().getFpsAssignment_0_3()); }
	)
	(
		{ before(grammarAccess.getTempDepAccess().getFpsAssignment_0_3()); }
		(rule__TempDep__FpsAssignment_0_3)*
		{ after(grammarAccess.getTempDepAccess().getFpsAssignment_0_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempDep__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_1__0__Impl
	rule__TempDep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_1__1__Impl
	rule__TempDep__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getTempDepAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_1__2__Impl
	rule__TempDep__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTempDepAccess().getFaAssignment_1_2()); }
		(rule__TempDep__FaAssignment_1_2)
		{ after(grammarAccess.getTempDepAccess().getFaAssignment_1_2()); }
	)
	(
		{ before(grammarAccess.getTempDepAccess().getFaAssignment_1_2()); }
		(rule__TempDep__FaAssignment_1_2)*
		{ after(grammarAccess.getTempDepAccess().getFaAssignment_1_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempDep__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_2__0__Impl
	rule__TempDep__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_2__1__Impl
	rule__TempDep__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getOpfAssignment_2_1()); }
	(rule__TempDep__OpfAssignment_2_1)
	{ after(grammarAccess.getTempDepAccess().getOpfAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_2__2__Impl
	rule__TempDep__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getFAssignment_2_2()); }
	(rule__TempDep__FAssignment_2_2)
	{ after(grammarAccess.getTempDepAccess().getFAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempDep__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_3__0__Impl
	rule__TempDep__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getTempDepAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_3__1__Impl
	rule__TempDep__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getOpfnAssignment_3_1()); }
	(rule__TempDep__OpfnAssignment_3_1)
	{ after(grammarAccess.getTempDepAccess().getOpfnAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_3__2__Impl
	rule__TempDep__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getF1Assignment_3_2()); }
	(rule__TempDep__F1Assignment_3_2)
	{ after(grammarAccess.getTempDepAccess().getF1Assignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_3__3__Impl
	rule__TempDep__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getIAssignment_3_3()); }
	(rule__TempDep__IAssignment_3_3)
	{ after(grammarAccess.getTempDepAccess().getIAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempDep__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_3_4()); }
	')'
	{ after(grammarAccess.getTempDepAccess().getRightParenthesisKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formula__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__0__Impl
	rule__Formula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getFormulaAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__1__Impl
	rule__Formula__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getAlternatives_1()); }
	(rule__Formula__Alternatives_1)
	{ after(grammarAccess.getFormulaAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formula__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormulaAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getFormulaAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbF__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group__0__Impl
	rule__ProbF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getProbOpAssignment_0()); }
	(rule__ProbF__ProbOpAssignment_0)
	{ after(grammarAccess.getProbFAccess().getProbOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group__1__Impl
	rule__ProbF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getAlternatives_1()); }
	(rule__ProbF__Alternatives_1)
	{ after(grammarAccess.getProbFAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getAlternatives_2()); }
	(rule__ProbF__Alternatives_2)
	{ after(grammarAccess.getProbFAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbF__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_0__0__Impl
	rule__ProbF__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getZotPKeyword_1_0_0_0()); }
	'(zot-p'
	{ after(grammarAccess.getProbFAccess().getZotPKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_0__1__Impl
	rule__ProbF__Group_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_1_0_0_1()); }
	'('
	{ after(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_0__2__Impl
	rule__ProbF__Group_1_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getTempF1Assignment_1_0_0_2()); }
	(rule__ProbF__TempF1Assignment_1_0_0_2)
	{ after(grammarAccess.getProbFAccess().getTempF1Assignment_1_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_0__3__Impl
	rule__ProbF__Group_1_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_0_3()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_0_4()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbF__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__0__Impl
	rule__ProbF__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getZotCpKeyword_1_0_1_0()); }
	'(zot-cp'
	{ after(grammarAccess.getProbFAccess().getZotCpKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__1__Impl
	rule__ProbF__Group_1_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_1_0_1_1()); }
	'('
	{ after(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__2__Impl
	rule__ProbF__Group_1_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getTempF11Assignment_1_0_1_2()); }
	(rule__ProbF__TempF11Assignment_1_0_1_2)
	{ after(grammarAccess.getProbFAccess().getTempF11Assignment_1_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__3__Impl
	rule__ProbF__Group_1_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_1_3()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__4__Impl
	rule__ProbF__Group_1_0_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_1_0_1_4()); }
	'('
	{ after(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_1_0_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__5__Impl
	rule__ProbF__Group_1_0_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getTempF12Assignment_1_0_1_5()); }
	(rule__ProbF__TempF12Assignment_1_0_1_5)
	{ after(grammarAccess.getProbFAccess().getTempF12Assignment_1_0_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__6__Impl
	rule__ProbF__Group_1_0_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_1_6()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_1_0_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_1_0_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_1_7()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_1_0_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbF__Group_2_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_0__0__Impl
	rule__ProbF__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getZotPKeyword_2_0_0_0()); }
	'(zot-p'
	{ after(grammarAccess.getProbFAccess().getZotPKeyword_2_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_0__1__Impl
	rule__ProbF__Group_2_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_2_0_0_1()); }
	'('
	{ after(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_2_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_0__2__Impl
	rule__ProbF__Group_2_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getTempF2Assignment_2_0_0_2()); }
	(rule__ProbF__TempF2Assignment_2_0_0_2)
	{ after(grammarAccess.getProbFAccess().getTempF2Assignment_2_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_0__3__Impl
	rule__ProbF__Group_2_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_0_3()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_0_4()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbF__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__0__Impl
	rule__ProbF__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getZotCpKeyword_2_0_1_0()); }
	'(zot-cp'
	{ after(grammarAccess.getProbFAccess().getZotCpKeyword_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__1__Impl
	rule__ProbF__Group_2_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_2_0_1_1()); }
	'('
	{ after(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__2__Impl
	rule__ProbF__Group_2_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getTempF21Assignment_2_0_1_2()); }
	(rule__ProbF__TempF21Assignment_2_0_1_2)
	{ after(grammarAccess.getProbFAccess().getTempF21Assignment_2_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__3__Impl
	rule__ProbF__Group_2_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_1_3()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__4__Impl
	rule__ProbF__Group_2_0_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_2_0_1_4()); }
	'('
	{ after(grammarAccess.getProbFAccess().getLeftParenthesisKeyword_2_0_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__5__Impl
	rule__ProbF__Group_2_0_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getTempF22Assignment_2_0_1_5()); }
	(rule__ProbF__TempF22Assignment_2_0_1_5)
	{ after(grammarAccess.getProbFAccess().getTempF22Assignment_2_0_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__6__Impl
	rule__ProbF__Group_2_0_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_1_6()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbF__Group_2_0_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Group_2_0_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_1_7()); }
	')'
	{ after(grammarAccess.getProbFAccess().getRightParenthesisKeyword_2_0_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempF__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_1__0__Impl
	rule__TempF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getAmpersandAmpersandKeyword_1_0()); }
	'&&'
	{ after(grammarAccess.getTempFAccess().getAmpersandAmpersandKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTempFAccess().getFaAssignment_1_1()); }
		(rule__TempF__FaAssignment_1_1)
		{ after(grammarAccess.getTempFAccess().getFaAssignment_1_1()); }
	)
	(
		{ before(grammarAccess.getTempFAccess().getFaAssignment_1_1()); }
		(rule__TempF__FaAssignment_1_1)*
		{ after(grammarAccess.getTempFAccess().getFaAssignment_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempF__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_2__0__Impl
	rule__TempF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getVerticalLineVerticalLineKeyword_2_0()); }
	'||'
	{ after(grammarAccess.getTempFAccess().getVerticalLineVerticalLineKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTempFAccess().getFoAssignment_2_1()); }
		(rule__TempF__FoAssignment_2_1)
		{ after(grammarAccess.getTempFAccess().getFoAssignment_2_1()); }
	)
	(
		{ before(grammarAccess.getTempFAccess().getFoAssignment_2_1()); }
		(rule__TempF__FoAssignment_2_1)*
		{ after(grammarAccess.getTempFAccess().getFoAssignment_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempF__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_3__0__Impl
	rule__TempF__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getExclamationMarkExclamationMarkKeyword_3_0()); }
	'!!'
	{ after(grammarAccess.getTempFAccess().getExclamationMarkExclamationMarkKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getFnotAssignment_3_1()); }
	(rule__TempF__FnotAssignment_3_1)
	{ after(grammarAccess.getTempFAccess().getFnotAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempF__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_4__0__Impl
	rule__TempF__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getOp2Assignment_4_0()); }
	(rule__TempF__Op2Assignment_4_0)
	{ after(grammarAccess.getTempFAccess().getOp2Assignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_4__1__Impl
	rule__TempF__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getF1Assignment_4_1()); }
	(rule__TempF__F1Assignment_4_1)
	{ after(grammarAccess.getTempFAccess().getF1Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getF2Assignment_4_2()); }
	(rule__TempF__F2Assignment_4_2)
	{ after(grammarAccess.getTempFAccess().getF2Assignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempF__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_5__0__Impl
	rule__TempF__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getOpfAssignment_5_0()); }
	(rule__TempF__OpfAssignment_5_0)
	{ after(grammarAccess.getTempFAccess().getOpfAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getFAssignment_5_1()); }
	(rule__TempF__FAssignment_5_1)
	{ after(grammarAccess.getTempFAccess().getFAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempF__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_6__0__Impl
	rule__TempF__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getOpfnAssignment_6_0()); }
	(rule__TempF__OpfnAssignment_6_0)
	{ after(grammarAccess.getTempFAccess().getOpfnAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_6__1__Impl
	rule__TempF__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getF1Assignment_6_1()); }
	(rule__TempF__F1Assignment_6_1)
	{ after(grammarAccess.getTempFAccess().getF1Assignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempF__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempFAccess().getIAssignment_6_2()); }
	(rule__TempF__IAssignment_6_2)
	{ after(grammarAccess.getTempFAccess().getIAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AP__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AP__Group__0__Impl
	rule__AP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getAPAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AP__Group__1__Impl
	rule__AP__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPAccess().getAlternatives_1()); }
	(rule__AP__Alternatives_1)
	{ after(grammarAccess.getAPAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AP__Group__2__Impl
	rule__AP__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getAPAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AP__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAPAccess().getNameAssignment_3()); }
	(rule__AP__NameAssignment_3)
	{ after(grammarAccess.getAPAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getIAssignment_0()); }
	(rule__DataType__IAssignment_0)
	{ after(grammarAccess.getDataTypeAccess().getIAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getFloatAssignment_1()); }
	(rule__DataType__FloatAssignment_1)?
	{ after(grammarAccess.getDataTypeAccess().getFloatAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__TempDepAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTempDepTempDepParserRuleCall_1_0()); }
		ruleTempDep
		{ after(grammarAccess.getModelAccess().getTempDepTempDepParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FmaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFmaFormulaParserRuleCall_3_0()); }
		ruleFormula
		{ after(grammarAccess.getModelAccess().getFmaFormulaParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__FdAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getFdFormulaParserRuleCall_0_2_0()); }
		ruleFormula
		{ after(grammarAccess.getTempDepAccess().getFdFormulaParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__FpsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getFpsFormulaParserRuleCall_0_3_0()); }
		ruleFormula
		{ after(grammarAccess.getTempDepAccess().getFpsFormulaParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__FaAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getFaTempDepParserRuleCall_1_2_0()); }
		ruleTempDep
		{ after(grammarAccess.getTempDepAccess().getFaTempDepParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__OpfAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getOpfOPFTerminalRuleCall_2_1_0()); }
		RULE_OPF
		{ after(grammarAccess.getTempDepAccess().getOpfOPFTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__FAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getFTempDepParserRuleCall_2_2_0()); }
		ruleTempDep
		{ after(grammarAccess.getTempDepAccess().getFTempDepParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__OpfnAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getOpfnOPFNTerminalRuleCall_3_1_0()); }
		RULE_OPFN
		{ after(grammarAccess.getTempDepAccess().getOpfnOPFNTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__F1Assignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getF1TempDepParserRuleCall_3_2_0()); }
		ruleTempDep
		{ after(grammarAccess.getTempDepAccess().getF1TempDepParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempDep__IAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempDepAccess().getIINTTerminalRuleCall_3_3_0()); }
		RULE_INT
		{ after(grammarAccess.getTempDepAccess().getIINTTerminalRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__ProbFAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormulaAccess().getProbFProbFParserRuleCall_1_0_0()); }
		ruleProbF
		{ after(grammarAccess.getFormulaAccess().getProbFProbFParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formula__TempAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormulaAccess().getTempTempFParserRuleCall_1_1_0()); }
		ruleTempF
		{ after(grammarAccess.getFormulaAccess().getTempTempFParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__ProbOpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getProbOpPROPOPTerminalRuleCall_0_0()); }
		RULE_PROPOP
		{ after(grammarAccess.getProbFAccess().getProbOpPROPOPTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__TempF1Assignment_1_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getTempF1TempFParserRuleCall_1_0_0_2_0()); }
		ruleTempF
		{ after(grammarAccess.getProbFAccess().getTempF1TempFParserRuleCall_1_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__TempF11Assignment_1_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getTempF11TempFParserRuleCall_1_0_1_2_0()); }
		ruleTempF
		{ after(grammarAccess.getProbFAccess().getTempF11TempFParserRuleCall_1_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__TempF12Assignment_1_0_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getTempF12TempFParserRuleCall_1_0_1_5_0()); }
		ruleTempF
		{ after(grammarAccess.getProbFAccess().getTempF12TempFParserRuleCall_1_0_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Real1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getReal1DataTypeParserRuleCall_1_1_0()); }
		ruleDataType
		{ after(grammarAccess.getProbFAccess().getReal1DataTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__TempF2Assignment_2_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getTempF2TempFParserRuleCall_2_0_0_2_0()); }
		ruleTempF
		{ after(grammarAccess.getProbFAccess().getTempF2TempFParserRuleCall_2_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__TempF21Assignment_2_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getTempF21TempFParserRuleCall_2_0_1_2_0()); }
		ruleTempF
		{ after(grammarAccess.getProbFAccess().getTempF21TempFParserRuleCall_2_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__TempF22Assignment_2_0_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getTempF22TempFParserRuleCall_2_0_1_5_0()); }
		ruleTempF
		{ after(grammarAccess.getProbFAccess().getTempF22TempFParserRuleCall_2_0_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbF__Real2Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbFAccess().getReal2DataTypeParserRuleCall_2_1_0()); }
		ruleDataType
		{ after(grammarAccess.getProbFAccess().getReal2DataTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__ApAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getApAPParserRuleCall_0_0()); }
		ruleAP
		{ after(grammarAccess.getTempFAccess().getApAPParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__FaAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getFaFormulaParserRuleCall_1_1_0()); }
		ruleFormula
		{ after(grammarAccess.getTempFAccess().getFaFormulaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__FoAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getFoFormulaParserRuleCall_2_1_0()); }
		ruleFormula
		{ after(grammarAccess.getTempFAccess().getFoFormulaParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__FnotAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getFnotFormulaParserRuleCall_3_1_0()); }
		ruleFormula
		{ after(grammarAccess.getTempFAccess().getFnotFormulaParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__Op2Assignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getOp2OP2TerminalRuleCall_4_0_0()); }
		RULE_OP2
		{ after(grammarAccess.getTempFAccess().getOp2OP2TerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__F1Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getF1FormulaParserRuleCall_4_1_0()); }
		ruleFormula
		{ after(grammarAccess.getTempFAccess().getF1FormulaParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__F2Assignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getF2FormulaParserRuleCall_4_2_0()); }
		ruleFormula
		{ after(grammarAccess.getTempFAccess().getF2FormulaParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__OpfAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getOpfOPFTerminalRuleCall_5_0_0()); }
		RULE_OPF
		{ after(grammarAccess.getTempFAccess().getOpfOPFTerminalRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__FAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getFFormulaParserRuleCall_5_1_0()); }
		ruleFormula
		{ after(grammarAccess.getTempFAccess().getFFormulaParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__OpfnAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getOpfnOPFNTerminalRuleCall_6_0_0()); }
		RULE_OPFN
		{ after(grammarAccess.getTempFAccess().getOpfnOPFNTerminalRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__F1Assignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getF1FormulaParserRuleCall_6_1_0()); }
		ruleFormula
		{ after(grammarAccess.getTempFAccess().getF1FormulaParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempF__IAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempFAccess().getIINTTerminalRuleCall_6_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTempFAccess().getIINTTerminalRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AP__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAPAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getAPAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__IAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getIINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDataTypeAccess().getIINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__FloatAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getFloatFLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getDataTypeAccess().getFloatFLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_PROPOP : ('<'|'<='|'='|'>'|'>=');

RULE_OP2 : ('->'|'<->'|'until'|'since'|'release'|'trigger');

RULE_OPF : ('next'|'yesterday'|'alw'|'som'|'alwf'|'somf'|'alwp'|'somp');

RULE_OPFN : ('futr'|'past'|'withinf'|'withinp'|'lasts'|'lasted');

RULE_FLOAT : '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
