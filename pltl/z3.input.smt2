(set-option :smtlib2-compliant true)
;Formula table:
;0	(|| (&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (!! (-P- a)) (!! (-P- b))) (&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (-P- b) (-P- a)))
;1	(&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (!! (-P- a)) (!! (-P- b)))
;2	(&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (-P- b) (-P- a))
;3	(!! (= (zot-p (-P- a)) (zot-p (-P- b))))
;4	(!! (-P- a))
;5	(!! (-P- b))
;6	(-P- a)
;7	(-P- b)
;8	(= (zot-p (-P- a)) (zot-p (-P- b)))
;Conditional probability table:

(declare-fun zot (Int Int) Bool)
(declare-fun zot-p (Int Int) Real)
(declare-fun zot-cp (Int Int Int Int) Real)
(define-fun range ((probability Real)) Bool
	(and (>= probability 0.0) (<= probability 1.0)))

(assert (and (zot 0 -1) (= (zot-p 0 -1) 1.0) (not (zot 0 -2)) (= (zot-p 0 -2) 0.0) (zot 1 -1) (= (zot-p 1 -1) 1.0) (not (zot 1 -2)) (= (zot-p 1 -2) 0.0) (zot 0 0) (= 1.0 (zot-p 0 0))
;(|| (&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (!! (-P- a)) (!! (-P- b))) (&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (-P- b) (-P- a)))
(= (zot 0 0) (or (zot 0 1) (zot 0 2)))
(= (zot 1 0) (or (zot 1 1) (zot 1 2)))
(= (zot-p 0 0) (+ (* (zot-p 0 3) (* (zot-p 0 4) (zot-p 0 5))) (- (* (zot-p 0 3) (* (zot-p 0 7) (zot-p 0 6))) (* (zot-p 0 3) (* (zot-p 0 4) (* (zot-p 0 5) (* (zot-p 0 7) (zot-p 0 6))))))))(= (zot-p 1 0) (+ (* (zot-p 1 3) (* (zot-p 1 4) (zot-p 1 5))) (- (* (zot-p 1 3) (* (zot-p 1 7) (zot-p 1 6))) (* (zot-p 1 3) (* (zot-p 1 4) (* (zot-p 1 5) (* (zot-p 1 7) (zot-p 1 6))))))))(range (zot-p 0 0))
(range (zot-p 1 0))

;(&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (!! (-P- a)) (!! (-P- b)))
(= (zot 0 1) (and (zot 0 3) (zot 0 4) (zot 0 5)))
(= (zot 1 1) (and (zot 1 3) (zot 1 4) (zot 1 5)))
(= (zot-p 0 1) (* (zot-p 0 3) (* (zot-p 0 4) (zot-p 0 5))))(= (zot-p 1 1) (* (zot-p 1 3) (* (zot-p 1 4) (zot-p 1 5))))(range (zot-p 0 1))
(range (zot-p 1 1))

;(&& (!! (= (zot-p (-P- a)) (zot-p (-P- b)))) (-P- b) (-P- a))
(= (zot 0 2) (and (zot 0 3) (zot 0 7) (zot 0 6)))
(= (zot 1 2) (and (zot 1 3) (zot 1 7) (zot 1 6)))
(= (zot-p 0 2) (* (zot-p 0 3) (* (zot-p 0 7) (zot-p 0 6))))(= (zot-p 1 2) (* (zot-p 1 3) (* (zot-p 1 7) (zot-p 1 6))))(range (zot-p 0 2))
(range (zot-p 1 2))

;(!! (= (zot-p (-P- a)) (zot-p (-P- b))))
(= (zot 0 3) (not (zot 0 8)))
(= (zot 1 3) (not (zot 1 8)))
(= 1.0 (+ (zot-p 0 3) (zot-p 0 8)))(= 1.0 (+ (zot-p 1 3) (zot-p 1 8)))(range (zot-p 0 3))
(range (zot-p 1 3))

;(!! (-P- a))
(= (zot 0 4) (not (zot 0 6)))
(= (zot 1 4) (not (zot 1 6)))
(= 1.0 (+ (zot-p 0 4) (zot-p 0 6)))(= 1.0 (+ (zot-p 1 4) (zot-p 1 6)))(range (zot-p 0 4))
(range (zot-p 1 4))

;(!! (-P- b))
(= (zot 0 5) (not (zot 0 7)))
(= (zot 1 5) (not (zot 1 7)))
(= 1.0 (+ (zot-p 0 5) (zot-p 0 7)))(= 1.0 (+ (zot-p 1 5) (zot-p 1 7)))(range (zot-p 0 5))
(range (zot-p 1 5))

;(-P- a)
(range (zot-p 0 6))
(range (zot-p 1 6))

;(-P- b)
(range (zot-p 0 7))
(range (zot-p 1 7))

;(= (zot-p (-P- a)) (zot-p (-P- b)))
(= (zot 0 8) (= (zot-p 0 6) (zot-p 0 7)))
(= (zot 1 8) (= (zot-p 1 6) (zot-p 1 7)))
))
(check-sat-using qfufnra)
(get-model)
